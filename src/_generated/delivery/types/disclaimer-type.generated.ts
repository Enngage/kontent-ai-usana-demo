/*
 * This file has been auto-generated by '@kontent-ai/sync-sdk@9.1.0'.
 * 
 * (c) Kontent.ai
 *  
 * -------------------------------------------------------------------------------
 * 
 * Project: Usana Angular
 * Environment: Production
 * Id: 2d0653cd-a8dd-00ea-3fca-403eccd094c6
 * 
 * -------------------------------------------------------------------------------
 */

import type { Elements, IContentItem } from "@kontent-ai/delivery-sdk"
import type { CollectionCodenames } from "../system/collections.generated"
import type { LanguageCodenames } from "../system/languages.generated"
import type { CoreType, TypeCodenames } from "../system/types.generated"
import type { WorkflowCodenames, WorkflowStepCodenames } from "../system/workflows.generated"

/*
 * Type representing codename of 'Disclaimer' type
 */
export type DisclaimerCodename = keyof Pick<Record<TypeCodenames, null>, "disclaimer">

/*
 * Typeguard for codename of 'Disclaimer' type
 */
export function isDisclaimerCodename(value: string | undefined | null): value is DisclaimerCodename {
	return typeof value === "string" && value === ("disclaimer" satisfies DisclaimerCodename)
}

/*
 * Disclaimer
 *
 * Id: 1625b6d0-c653-498c-8bf2-acf59d97bbbf
 * Codename: disclaimer
 */
export type Disclaimer = IContentItem<
	{
		/*
		 * Header
		 *
		 * Codename: header
		 * Id: 8fd6c855-3ae7-4138-89e4-4f832252325c
		 * Type: text
		 * Required: false
		 */
		readonly header: Elements.TextElement

		/*
		 * Body Copy
		 *
		 * Codename: body_copy
		 * Id: 0668f753-1412-416b-9638-8e0c2b36ce3a
		 * Type: rich_text
		 * Required: false
		 */
		readonly body_copy: Elements.RichTextElement<CoreType>
	},
	DisclaimerCodename,
	LanguageCodenames,
	CollectionCodenames,
	WorkflowCodenames,
	WorkflowStepCodenames
>

/*
 * Type representing all available element codenames for Disclaimer
 */
export type DisclaimerElementCodenames = "header" | "body_copy"

/*
 * Type guard for Disclaimer
 *
 * Id: 1625b6d0-c653-498c-8bf2-acf59d97bbbf
 * Codename: disclaimer
 */
export function isDisclaimer(item: IContentItem | undefined | null): item is Disclaimer {
	return item?.system.type === ("disclaimer" satisfies DisclaimerCodename)
}
