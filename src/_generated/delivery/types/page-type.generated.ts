/*
 * This file has been auto-generated by '@kontent-ai/sync-sdk@9.1.0'.
 * 
 * (c) Kontent.ai
 *  
 * -------------------------------------------------------------------------------
 * 
 * Project: Usana Angular
 * Environment: Production
 * Id: 2d0653cd-a8dd-00ea-3fca-403eccd094c6
 * 
 * -------------------------------------------------------------------------------
 */

import type { Elements, IContentItem } from "@kontent-ai/delivery-sdk"
import type { CollectionCodenames } from "../system/collections.generated"
import type { LanguageCodenames } from "../system/languages.generated"
import type { CoreType, TypeCodenames } from "../system/types.generated"
import type { WorkflowCodenames, WorkflowStepCodenames } from "../system/workflows.generated"
import type { ProductTypeTaxonomyCodename, ProductTypeTaxonomyTermCodenames } from "../taxonomies/product-type-taxonomy.generated"

/*
 * Type representing codename of 'Page' type
 */
export type PageCodename = keyof Pick<Record<TypeCodenames, null>, "page">

/*
 * Typeguard for codename of 'Page' type
 */
export function isPageCodename(value: string | undefined | null): value is PageCodename {
	return typeof value === "string" && value === ("page" satisfies PageCodename)
}

/*
 * Page
 *
 * Id: bc28363e-f5a1-4cb3-805b-82f31ff3a784
 * Codename: page
 */
export type Page = IContentItem<
	{
		/*
		 * Title
		 *
		 * Codename: title
		 * Id: c56f9d0e-2eca-40ee-89c5-a0844fa8daa6
		 * Type: text
		 * Required: true
		 */
		readonly title: Elements.TextElement

		/*
		 * Body Copy
		 *
		 * Codename: body_copy
		 * Id: 3b980867-1078-4bc4-b462-ef9458514633
		 * Type: rich_text
		 * Required: false
		 */
		readonly body_copy: Elements.RichTextElement<CoreType>

		/*
		 * Hero image
		 *
		 * Codename: hero_image
		 * Id: 87934b51-9a7d-4c8e-b3a9-f0ffb8397096
		 * Type: asset
		 * Required: true
		 */
		readonly hero_image: Elements.AssetsElement

		/*
		 * Product Type
		 *
		 * Codename: category
		 * Id: 8860d00d-042a-4843-ae78-e6555023c379
		 * Type: taxonomy
		 * Required: false
		 * Taxonomy: product_type
		 */
		readonly category: Elements.TaxonomyElement<ProductTypeTaxonomyTermCodenames, ProductTypeTaxonomyCodename>
	},
	PageCodename,
	LanguageCodenames,
	CollectionCodenames,
	WorkflowCodenames,
	WorkflowStepCodenames
>

/*
 * Type representing all available element codenames for Page
 */
export type PageElementCodenames = "title" | "body_copy" | "hero_image" | "category"

/*
 * Type guard for Page
 *
 * Id: bc28363e-f5a1-4cb3-805b-82f31ff3a784
 * Codename: page
 */
export function isPage(item: IContentItem | undefined | null): item is Page {
	return item?.system.type === ("page" satisfies PageCodename)
}
